#!/usr/bin/perl

=head1 NAME

title_duplicates - warn of duplicate entries based on title

=head1 SYNOPSIS

=head1 DESCRIPTION

Provides a warning box for any other eprints where q prefixes the title.

=cut

use EPrints;
use JSON;

use strict;
use warnings;

binmode(STDOUT, ":utf8");

my $repo = EPrints->new->current_repository;
my $eprintid = $repo->param("eprintid");
if($repo->can_call("hefce_oa", "get_core")){

    if( !defined($eprintid) ){
        _fatal($repo,,"get_core called without id argument");
    }elsif( $eprintid !~ /^([0-9]+)$/ ){
        _fatal($repo, "get_core requires numeric eprintid argument");
    }

    my $eprint = $repo->dataset( "eprint" )->dataobj( $eprintid );
    _fatal($repo, "No eprint found with supplied parameters") if (!EPrints::Utils::is_set($eprint));

    my ($status, $response, $details) = $repo->call(["hefce_oa", "get_core"],$repo, $eprint);
    _fatal($repo, $response, $details) if($status eq "ERROR");
    _result($repo, $response) if($status eq "SUCCESS");

}else{
    _fatal($repo, "The REF CC audit check-up does not appear ot be properly installed");
}


sub _fatal {
    my ($repo, $msg, $response) = @_;

    my $json = JSON->new->allow_nonref;
 
    if(!defined $response){
        $repo->log($msg);
        print $json->encode( {error=> $msg, params => $repo->get_request->args } );
    }else{
        $repo->log($msg." ".$response->content);
        print $json->encode( {error=> $msg, status_line=> $response->status_line, code => $response->code, response => $json->utf8->decode($response->content), params => $repo->get_request->args } );
    }
    exit; 

}

sub _result {
    my ($repo, $response) = @_;

    my $json = JSON->new->allow_nonref;

	if( $response->is_success ){
        print $response->content;
    }else{
        _fatal($repo,"Error from core", $response);
    }
}
